{"version":3,"sources":["components/Navbar.js","components/Textinputs.js","components/About.js","App.js","index.js"],"names":["Navbar","props","className","style","to","type","id","onClick","darkmode","htmlFor","Textinputs","useState","inptext","setinptext","rows","value","onChange","event","target","newText","toUpperCase","toLowerCase","navigator","clipboard","writeText","length","split","About","App","mode","setmode","styleText","document","body","backgroundColor","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.756e2763.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.style} bg-${props.style}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">TextUtils</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.darkmode} />\r\n                            <label className={`form-check-label text-${props.style === \"light\" ? \"dark\" : \"light\"}`} htmlFor=\"flexSwitchCheckDefault\">{props.style === \"light\" ? \"Enabled Light Mode\" : \"Enabled Dark Mode\"}</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState } from 'react'\r\n\r\nconst Textinputs = (props) => {\r\n    const updateInput = (event) => {\r\n        setinptext(event.target.value)\r\n    }\r\n    const capitalizeInput = () => {\r\n        const newText = inptext.toUpperCase()\r\n        setinptext(newText)\r\n    }\r\n    const lowercaseInput = () => {\r\n        setinptext(inptext.toLowerCase())\r\n    }\r\n    const clearText = () => {\r\n        setinptext(\"\")\r\n    }\r\n    const copyText = () => {\r\n        navigator.clipboard.writeText(inptext)\r\n    }\r\n    const [inptext, setinptext] = useState(\"\")\r\n    return (\r\n        <>\r\n            <div className=\"my-3 container\">\r\n                <div>\r\n                    <h1 className={`text-center mb-5 text-${props.style === \"light\" ? \"dark\" : \"light\"}`}>Enter the text click button and analyze your text</h1>\r\n                </div>\r\n                <label htmlFor=\"exampleFormControlTextarea1\" className={`form-label text-${props.style === \"light\" ? \"dark\" : \"light\"}`}>Enter Your Text Below :</label>\r\n                <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"8\" value={inptext} onChange={updateInput}></textarea>\r\n                <div className=\"d-flex justify-content-center mt-3\">\r\n                    <button type=\"button\" className=\"btn btn-outline-secondary mx-2\" onClick={capitalizeInput}>Text Uppercase</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-secondary mx-2\" onClick={lowercaseInput}>Text Lowercase</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-secondary mx-2\" onClick={clearText}>Clear Text</button>\r\n                    <button type=\"button\" className=\"btn btn-outline-secondary mx-2\" onClick={copyText}>Copy Text</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h2 className={`text-${props.style === \"light\" ? \"dark\" : \"light\"}`}>Your text summary</h2>\r\n                <p className={`text-${props.style === \"light\" ? \"dark\" : \"light\"}`}>{inptext.length === 0 ? 0 : inptext.split(\" \").length} words and {inptext.length} charecters</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Textinputs\r\n\r\n","import React from 'react'\r\n\r\nconst About = (props) => {\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            Text uppercase\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className={`accordion-body bg-${props.style} text-${props.style === \"light\" ? \"dark\" : \"light\"}`}>\r\n                            After clicking <strong>Text Uppercase</strong> button your full text will be in uppercase then you can use it.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Text Lowercase\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className={`accordion-body bg-${props.style} text-${props.style === \"light\" ? \"dark\" : \"light\"}`}>\r\n                            After clicking <strong>Text Lowercase</strong> button your full text will be in lowercase then you can use it.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Clear Text\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className={`accordion-body bg-${props.style} text-${props.style === \"light\" ? \"dark\" : \"light\"}`}>\r\n                            After clicking <strong>Clear Text</strong> button your full text will be cleared then you can write new text for utilize.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item \">\r\n                    <h2 className=\"accordion-header\" id=\"headingFour\">\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseFour\" aria-expanded=\"true\" aria-controls=\"collapseFour\">\r\n                            Copy Text\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseFour\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingFour\" data-bs-parent=\"#accordionExample\">\r\n                        <div className={`accordion-body bg-${props.style} text-${props.style === \"light\" ? \"dark\" : \"light\"}`}>\r\n                            After clicking <strong>Copy Text</strong> button full text will be copied then you can paste this text anywhere.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textinputs from './components/Textinputs';\nimport About from './components/About'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [mode, setmode] = useState(false)\n\n  const handdleMode = () => {\n    if (mode) {\n      setmode(false)\n      document.body.style.backgroundColor = \"white\"\n    }\n    else {\n      setmode(true)\n      document.body.style.backgroundColor = \"#000000\"\n    }\n  }\n  const styleText = mode ? \"dark\" : \"light\"\n\n  return (\n    <>\n      <Router>\n        <Navbar style={styleText} darkmode={handdleMode} />\n        <Switch>\n          <Route path=\"/about\">\n            <About style={styleText} />\n          </Route>\n          <Route path=\"/\">\n            <Textinputs style={styleText} />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}